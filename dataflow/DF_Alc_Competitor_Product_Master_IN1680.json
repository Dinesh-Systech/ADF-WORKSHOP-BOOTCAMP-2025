{
	"name": "DF_Alc_Competitor_Product_Master_IN1680",
	"properties": {
		"folder": {
			"name": "stg - dw"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob_CSV_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCstgcompetitors"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob_CSV_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCtgtCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Blob_CSV_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKtgtCustomer"
				},
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKtgtUpdate"
				}
			],
			"transformations": [
				{
					"name": "selectTgt"
				},
				{
					"name": "LeftJoinStgAndTgt"
				},
				{
					"name": "insert"
				},
				{
					"name": "nullHandling"
				},
				{
					"name": "updatedAt"
				},
				{
					"name": "SLCTsrccols"
				},
				{
					"name": "SLCTtgtUpdate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SKUCode as integer,",
				"          ItemName as string,",
				"          CompanyCode as string,",
				"          IndustryName as string,",
				"          BrandFamily as string,",
				"          BrandCode as string,",
				"          BrandName as string,",
				"          ReportingSegment as string,",
				"          BrandPackSize as string,",
				"          PackTypeCode as string,",
				"          BrandPackType as string,",
				"          State_Code as string,",
				"          State as string,",
				"          ProductCategory as string,",
				"          ProductSegment as string,",
				"          Flavour as string,",
				"          SubFlavour as string,",
				"          Division as string,",
				"          CreatedAt as string,",
				"          UpdatedAt as string,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SRCstgcompetitors",
				"source(output(",
				"          SKUCode as integer,",
				"          ItemName as string,",
				"          CompanyCode as string,",
				"          IndustryName as string,",
				"          BrandFamily as string,",
				"          BrandCode as string,",
				"          BrandName as string,",
				"          ReportingSegment as string,",
				"          BrandPackSize as string,",
				"          PackTypeCode as string,",
				"          BrandPackType as string,",
				"          State_Code as string,",
				"          State as string,",
				"          ProductCategory as string,",
				"          ProductSegment as string,",
				"          Flavour as string,",
				"          SubFlavour as string,",
				"          Division as string,",
				"          CreatedAt as string,",
				"          UpdatedAt as string,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SRCtgtCustomer",
				"SRCtgtCustomer select(mapColumn(",
				"          each(match(true()),",
				"               'tgt_'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectTgt",
				"SRCstgcompetitors, selectTgt join(SKUCode == tgt_SKUCode,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinStgAndTgt",
				"nullHandling split(isNull(SKUCode),",
				"     !isNull(tgt_SKUCode) && (ReportingSegment!=tgt_ReportingSegment ||ProductSegment!=tgt_ProductSegment),",
				"     disjoint: false) ~> insert@(insert, update)",
				"LeftJoinStgAndTgt derive(each(match(type=='string'), $$ = iifNull($$,'UNK')),",
				"          each(match(type=='integer'), $$ = iifNull($$,-1)),",
				"          each(match(type=='timestamp'), $$ = iifNull($$,toTimestamp('1900-01-01', 'yyyy-MM-dd')))) ~> nullHandling",
				"SLCTtgtUpdate derive(UpdatedAt = currentTimestamp(),",
				"          UpdatedBy = 'PL_Alc_Company_Master_IN1680') ~> updatedAt",
				"insert@insert select(mapColumn(",
				"          SKUCode,",
				"          ItemName,",
				"          CompanyCode,",
				"          IndustryName,",
				"          BrandFamily,",
				"          BrandCode,",
				"          BrandName,",
				"          ReportingSegment,",
				"          BrandPackSize,",
				"          PackTypeCode,",
				"          BrandPackType,",
				"          State_Code,",
				"          State,",
				"          ProductCategory,",
				"          ProductSegment,",
				"          Flavour,",
				"          SubFlavour,",
				"          Division,",
				"          CreatedAt,",
				"          UpdatedAt,",
				"          CreatedBy,",
				"          UpdatedBy,",
				"          tgt_SKUCode,",
				"          tgt_ItemName,",
				"          tgt_CompanyCode,",
				"          tgt_IndustryName,",
				"          tgt_BrandFamily,",
				"          tgt_BrandCode,",
				"          tgt_BrandName,",
				"          tgt_ReportingSegment,",
				"          tgt_BrandPackSize,",
				"          tgt_PackTypeCode,",
				"          tgt_BrandPackType,",
				"          tgt_State_Code,",
				"          tgt_State,",
				"          tgt_ProductCategory,",
				"          tgt_ProductSegment,",
				"          tgt_Flavour,",
				"          tgt_SubFlavour,",
				"          tgt_Division,",
				"          tgt_CreatedAt,",
				"          tgt_UpdatedAt,",
				"          tgt_CreatedBy,",
				"          tgt_UpdatedBy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SLCTsrccols",
				"insert@update select(mapColumn(",
				"          SalesOrgCode = tgt_SalesOrgCode,",
				"          SalesOrgName = tgt_SalesOrgName,",
				"          CompanyCode = tgt_CompanyCode,",
				"          CompanyKey = tgt_CompanyKey,",
				"          CompanyName = tgt_CompanyName,",
				"          ReportingHierarchyCode1 = tgt_ReportingHierarchyCode1,",
				"          ReportingHierarchyName1 = tgt_ReportingHierarchyName1,",
				"          ReportingHierarchyCode2 = tgt_ReportingHierarchyCode2,",
				"          ReportingHierarchyName2 = tgt_ReportingHierarchyName2,",
				"          ReportingHierarchyCode3 = tgt_ReportingHierarchyCode3,",
				"          ReportingHierarchyName3 = tgt_ReportingHierarchyName3,",
				"          CreatedAt = tgt_CreatedAt,",
				"          UpdatedAt = tgt_UpdatedAt,",
				"          CreatedBy = tgt_CreatedBy,",
				"          UpdatedBy = tgt_UpdatedBy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SLCTtgtUpdate",
				"SLCTsrccols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SNKtgtCustomer",
				"updatedAt sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKtgtUpdate"
			]
		}
	}
}