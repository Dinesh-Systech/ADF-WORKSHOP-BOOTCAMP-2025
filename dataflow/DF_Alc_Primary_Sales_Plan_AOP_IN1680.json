{
	"name": "DF_Alc_Primary_Sales_Plan_AOP_IN1680",
	"properties": {
		"folder": {
			"name": "stg - dw"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCstg"
				},
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCtgt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKtgt"
				},
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKstgDel"
				},
				{
					"name": "SNKdate"
				}
			],
			"transformations": [
				{
					"name": "maxDate"
				},
				{
					"name": "Transformation"
				},
				{
					"name": "AlterInsert"
				},
				{
					"name": "Insert"
				},
				{
					"name": "AlterDelete"
				},
				{
					"name": "TransformationDate"
				},
				{
					"name": "SLCTKey"
				}
			],
			"scriptLines": [
				"source(output(",
				"          StateCode as string,",
				"          Month as string,",
				"          SKUCode as integer,",
				"          BrandPackType as string,",
				"          BrandPackSize as string,",
				"          BrandCode as string,",
				"          CreatedMonth as string,",
				"          Plan_Qty as decimal(18,0),",
				"          CreatedAt as timestamp,",
				"          UpdatedAt as timestamp,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCstg",
				"source(output(",
				"          StateKey as string,",
				"          Month as date,",
				"          ItemKey as integer,",
				"          BrandPackType as string,",
				"          BrandPackSize as string,",
				"          BrandCode as string,",
				"          CreatedMonth as date,",
				"          Plan_Qty as decimal(18,0),",
				"          CreatedAt as timestamp,",
				"          UpdatedAt as timestamp,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCtgt",
				"SRCtgt aggregate(maxdate = max(Month)) ~> maxDate",
				"SRCstg derive(Month = toDate(Month,'MMM-yy'),",
				"          CreatedMonth = toDate(CreatedMonth,'MMM-yy')) ~> Transformation",
				"SLCTKey alterRow(insertIf(true())) ~> AlterInsert",
				"Transformation split(Month>SNKdate#outputs()[1].maxdate,",
				"     SNKdate#outputs()[1].maxdate!=toDate('01-01-1900','dd-MM-yyyy') && Month<SNKdate#outputs()[1].maxdate && Month >subMonths(SNKdate#outputs()[1].maxdate,-1),",
				"     disjoint: true) ~> Insert@(Insert, delete)",
				"Insert@delete alterRow(deleteIf(true())) ~> AlterDelete",
				"maxDate derive(maxdate = coalesce(maxdate,toDate('01-01-1900','dd-MM-yyyy'))) ~> TransformationDate",
				"Insert@Insert select(mapColumn(",
				"          StateKey = StateCode,",
				"          Month,",
				"          ItemKey = SKUCode,",
				"          BrandPackType,",
				"          BrandPackSize,",
				"          BrandCode,",
				"          CreatedMonth,",
				"          Plan_Qty,",
				"          CreatedAt,",
				"          UpdatedAt,",
				"          CreatedBy,",
				"          UpdatedBy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SLCTKey",
				"AlterInsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKtgt",
				"AlterDelete sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:false,",
				"     keys:['SKUCode','Month'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKstgDel",
				"TransformationDate sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> SNKdate"
			]
		}
	}
}