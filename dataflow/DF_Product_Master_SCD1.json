{
	"name": "DF_Product_Master_SCD1",
	"properties": {
		"folder": {
			"name": "End to End Workshop/Stg to Dw"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_Tgt_In1677",
						"type": "DatasetReference"
					},
					"name": "SrcProductMaster"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_Tgt_In1677",
						"type": "DatasetReference"
					},
					"name": "TgtProductMaster"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_Tgt_In1677",
						"type": "DatasetReference"
					},
					"name": "SnkProductMasterInsert"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_Tgt_In1677",
						"type": "DatasetReference"
					},
					"name": "SnkProductMasterUpdate"
				}
			],
			"transformations": [
				{
					"name": "JoinSrcTgt"
				},
				{
					"name": "split1"
				},
				{
					"name": "alterRowInsert"
				},
				{
					"name": "alterRowUpdate"
				},
				{
					"name": "AuditColumns1"
				},
				{
					"name": "AuditColumns2"
				},
				{
					"name": "selectCols"
				},
				{
					"name": "TransformationTgt"
				},
				{
					"name": "NullHandling"
				},
				{
					"name": "ProductKey"
				},
				{
					"name": "selectCols1"
				},
				{
					"name": "selectCols2"
				},
				{
					"name": "TransformationProduct"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SKUCode as integer,",
				"          ItemName as string,",
				"          CompanyCode as string,",
				"          IndustryName as string,",
				"          BrandFamily as string,",
				"          ReportingSegment as string,",
				"          BrandPackSize as string,",
				"          PackTypeCode as string,",
				"          BrandPackType as string,",
				"          State_Code as string,",
				"          State as string,",
				"          BrandCode as string,",
				"          BrandName as string,",
				"          ProductCategory as string,",
				"          ProductSegment as string,",
				"          CaseConfig as integer,",
				"          Division as string,",
				"          ConversionFactor as integer,",
				"          AcquiredStartDate as timestamp,",
				"          AcquiredEndDate as timestamp,",
				"          DisposedStartDate as timestamp,",
				"          DisposedEndDate as timestamp,",
				"          InnovationFlag as string,",
				"          Flavour as string,",
				"          SubFlavour as string,",
				"          CreatedAt as timestamp,",
				"          UpdatedAt as timestamp,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SrcProductMaster",
				"source(output(",
				"          SKUCode as integer,",
				"          ProductKey as integer,",
				"          ItemName as string,",
				"          CompanyCode as string,",
				"          IndustryName as string,",
				"          BrandFamily as string,",
				"          ReportingSegment as string,",
				"          BrandPackSize as string,",
				"          PackTypeCode as string,",
				"          BrandPackType as string,",
				"          State_Code as string,",
				"          State as string,",
				"          BrandCode as string,",
				"          BrandName as string,",
				"          ProductCategory as string,",
				"          ProductSegment as string,",
				"          CaseConfig as integer,",
				"          Division as string,",
				"          ConversionFactor as integer,",
				"          AcquiredStartDate as timestamp,",
				"          AcquiredEndDate as timestamp,",
				"          DisposedStartDate as timestamp,",
				"          DisposedEndDate as timestamp,",
				"          InnovationFlag as string,",
				"          Flavour as string,",
				"          SubFlavour as string,",
				"          CreatedAt as timestamp,",
				"          UpdatedAt as timestamp,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TgtProductMaster",
				"SrcProductMaster, TransformationTgt join(SKUCode == tgt_SKUCode,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinSrcTgt",
				"ProductKey split(SKUCode!=tgt_SKUCode,",
				"     (SKUCode ==tgt_SKUCode && ReportingSegment!=tgt_ReportingSegment),",
				"     disjoint: false) ~> split1@(Insert, Update)",
				"split1@Insert alterRow(insertIf(true())) ~> alterRowInsert",
				"split1@Update alterRow(updateIf(true())) ~> alterRowUpdate",
				"alterRowInsert derive(UpdatedAt = toTimestamp(null()),",
				"          UpdatedBy = toString(null())) ~> AuditColumns1",
				"alterRowUpdate derive(tgt_UpdatedAt = currentTimestamp(),",
				"          tgt_UpdatedBy = tgt_CreatedBy,",
				"          tgt_ReportingSegment = ReportingSegment) ~> AuditColumns2",
				"AuditColumns1 select(mapColumn(",
				"          SKUCode,",
				"          ItemName,",
				"          CompanyCode,",
				"          IndustryName,",
				"          BrandFamily,",
				"          ReportingSegment,",
				"          BrandPackSize,",
				"          PackTypeCode,",
				"          BrandPackType,",
				"          State_Code,",
				"          State,",
				"          BrandCode,",
				"          BrandName,",
				"          ProductCategory,",
				"          ProductSegment,",
				"          CaseConfig,",
				"          Division,",
				"          ConversionFactor,",
				"          AcquiredStartDate,",
				"          AcquiredEndDate,",
				"          DisposedStartDate,",
				"          DisposedEndDate,",
				"          InnovationFlag,",
				"          Flavour,",
				"          SubFlavour,",
				"          CreatedAt,",
				"          UpdatedAt,",
				"          CreatedBy,",
				"          UpdatedBy,",
				"          ProductKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCols",
				"TgtProductMaster select(mapColumn(",
				"          each(match(true()),",
				"               'tgt_'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TransformationTgt",
				"JoinSrcTgt derive(each(match(type=='string'), $$ = iif(isNull($$)||lower($$)=='null','UNK',$$)),",
				"          each(match(type=='integer'), $$ = iif(isNull($$),-1,toInteger($$))),",
				"          each(match(type=='timestamp'), $$ = iif(isNull($$),toTimestamp('31/12/2999'),$$))) ~> NullHandling",
				"NullHandling keyGenerate(output(ProductKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ProductKey",
				"AuditColumns2 select(mapColumn(",
				"          tgt_SKUCode,",
				"          tgt_ProductKey,",
				"          tgt_ItemName,",
				"          tgt_CompanyCode,",
				"          tgt_IndustryName,",
				"          tgt_BrandFamily,",
				"          tgt_ReportingSegment,",
				"          tgt_BrandPackSize,",
				"          tgt_PackTypeCode,",
				"          tgt_BrandPackType,",
				"          tgt_State_Code,",
				"          tgt_State,",
				"          tgt_BrandCode,",
				"          tgt_BrandName,",
				"          tgt_ProductCategory,",
				"          tgt_ProductSegment,",
				"          tgt_CaseConfig,",
				"          tgt_Division,",
				"          tgt_ConversionFactor,",
				"          tgt_AcquiredStartDate,",
				"          tgt_AcquiredEndDate,",
				"          tgt_DisposedStartDate,",
				"          tgt_DisposedEndDate,",
				"          tgt_InnovationFlag,",
				"          tgt_Flavour,",
				"          tgt_SubFlavour,",
				"          tgt_CreatedAt,",
				"          tgt_UpdatedAt,",
				"          tgt_CreatedBy,",
				"          tgt_UpdatedBy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCols1",
				"selectCols1 select(mapColumn(",
				"          each(match(true()),",
				"               replace($$,'tgt_','') = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCols2",
				"selectCols derive(ItemName = Flavour) ~> TransformationProduct",
				"TransformationProduct sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SnkProductMasterInsert",
				"selectCols2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['SKUCode'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SnkProductMasterUpdate"
			]
		}
	}
}