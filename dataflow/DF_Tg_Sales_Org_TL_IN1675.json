{
	"name": "DF_Tg_Sales_Org_TL_IN1675",
	"properties": {
		"folder": {
			"name": "End to End Workshop/DF_Stg_to_Tgt_IN1675"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Azure_SQL_IN1675",
						"type": "DatasetReference"
					},
					"name": "SrcSalesTLMaster"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Azure_SQL_IN1675",
						"type": "DatasetReference"
					},
					"name": "TgtSalesTLMaster"
				}
			],
			"transformations": [
				{
					"name": "TLKey"
				},
				{
					"name": "NullHandling"
				},
				{
					"name": "DataTypeConversion"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TL_Territory_Name as string,",
				"          TL_Territory_Code as string,",
				"          TL_Territory_ID as integer,",
				"          TL as string,",
				"          TL_SFA_Code as string,",
				"          TL_Code as integer,",
				"          TL_Email as string,",
				"          TL_Mobile as string,",
				"          Market_Working_Norms as integer,",
				"          Min_Market_Working_With_TSE as integer,",
				"          Active_flag as string,",
				"          TL_Start_Date as string,",
				"          TL_End_Date as string,",
				"          Cluster_Code as string,",
				"          CreatedBy as string,",
				"          CreatedDate as timestamp,",
				"          UpdatedBy as string,",
				"          UpdatedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SrcSalesTLMaster",
				"DataTypeConversion keyGenerate(output(TLKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> TLKey",
				"TLKey derive(each(match(type=='string'), $$ = iif(isNull($$) || $$ == 'NULL', 'UNK', $$)),",
				"          each(match(type=='integer'), $$ = iifNull($$, -1, $$)),",
				"          each(match(type=='timestamp'), $$ = iifNull($$, toTimestamp('2999-12-31 00:00:00', 'yyyy-MM-dd HH:mm:ss')))) ~> NullHandling",
				"SrcSalesTLMaster derive(TL_Start_Date = toDate(TL_Start_Date,\"dd-MM-yyyy\"),",
				"          TL_End_Date = toDate(TL_End_Date,\"dd-MM-yyyy\")) ~> DataTypeConversion",
				"NullHandling sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> TgtSalesTLMaster"
			]
		}
	}
}