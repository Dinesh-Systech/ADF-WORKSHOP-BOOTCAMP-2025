{
	"name": "DF_ActivationMaster",
	"properties": {
		"folder": {
			"name": "End to End Workshop/Stg to Tgt"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSql_IN1684",
						"type": "DatasetReference"
					},
					"name": "SRCActivationMaster"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSql_IN1684",
						"type": "DatasetReference"
					},
					"name": "SNKActivation"
				}
			],
			"transformations": [
				{
					"name": "DatatypeCange"
				},
				{
					"name": "ActivationKey"
				},
				{
					"name": "SelectOrder"
				},
				{
					"name": "NullHandling"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PromotionCode as string,",
				"          PromotionDescription as string,",
				"          PromotionType as string,",
				"          ProductLevelCode as string,",
				"          EffectiveFrom as string,",
				"          EffectiveTo as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCActivationMaster",
				"SRCActivationMaster derive(EffectiveFrom = toDate(EffectiveFrom,\"dd-MM-yyyy\"),",
				"          EffectiveTo = toDate(EffectiveTo,\"dd-MM-yyyy\")) ~> DatatypeCange",
				"NullHandling keyGenerate(output(ActivationKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ActivationKey",
				"ActivationKey select(mapColumn(",
				"          PromotionCode,",
				"          ActivationKey,",
				"          PromotionDescription,",
				"          PromotionType,",
				"          ProductLevelCode,",
				"          EffectiveFrom,",
				"          EffectiveTo,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOrder",
				"DatatypeCange derive(each(match(type == 'string'), $$ = iif(isNull($$) || $$ == 'NULL', 'UNK', $$)),",
				"          each(match(type == 'int'), $$ = iifNull($#, 0)),",
				"          each(match(type == 'timestamp'), $$ = iifNull($$, toTimestamp('2999-12-31 00:00:00', 'yyyy-MM-dd HH:mm:ss')))) ~> NullHandling",
				"SelectOrder sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          PromotionCode,",
				"          ActivationKey,",
				"          PromotionDescription,",
				"          PromotionType,",
				"          ProductLevelCode,",
				"          EffectiveFrom,",
				"          EffectiveTo,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date}",
				"     )) ~> SNKActivation"
			]
		}
	}
}