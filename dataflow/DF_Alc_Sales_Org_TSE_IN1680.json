{
	"name": "DF_Alc_Sales_Org_TSE_IN1680",
	"properties": {
		"folder": {
			"name": "stg - dw"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCtse"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKtse"
				}
			],
			"transformations": [
				{
					"name": "NullHandle"
				},
				{
					"name": "TSEKey"
				},
				{
					"name": "SLCTcols"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TSE_Territory_Name as string,",
				"          TSE_Territory_Code as string,",
				"          TSE_Territory_ID as integer,",
				"          TSE as string,",
				"          TSE_Code as integer,",
				"          TSE_SFA_Code as string,",
				"          TSE_Email as string,",
				"          TSE_Mobile as long,",
				"          TSE_Call_Norm as integer,",
				"          State as string,",
				"          State_Code as string,",
				"          DISTRICT as string,",
				"          DISTRICT_CODE as string,",
				"          Active_Flag as integer,",
				"          TSE_Start_Date as string,",
				"          TSE_End_Date as string,",
				"          TL_Code as string,",
				"          CreatedAt as timestamp,",
				"          UpdatedAt as timestamp,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCtse",
				"SRCtse derive(each(match(type =='string'), $$ = iifNull($$,'UNK')),",
				"          each(match(type=='integer'), $$ = iifNull($$,-1)),",
				"          each(match(type =='timestamp'), $$ = iifNull($$,toTimestamp('1900-01-01', 'yyyy-MM-dd'))),",
				"          TSE_Start_DateN = toDate(TSE_Start_Date, 'dd-MM-yyyy'),",
				"          TSE_End_DateN = toDate(TSE_End_Date, 'dd-MM-yyyy')) ~> NullHandle",
				"SLCTcols keyGenerate(output(TSE_Territory_Key as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> TSEKey",
				"NullHandle select(mapColumn(",
				"          TSE_Territory_Name,",
				"          TSE_Territory_Code,",
				"          TSE_Territory_ID,",
				"          TSE,",
				"          TSE_Code,",
				"          TSE_SFA_Code,",
				"          TSE_Email,",
				"          TSE_Mobile,",
				"          TSE_Call_Norm,",
				"          State,",
				"          State_Code,",
				"          DISTRICT,",
				"          DISTRICT_CODE,",
				"          Active_Flag,",
				"          TL_Code,",
				"          CreatedAt,",
				"          UpdatedAt,",
				"          CreatedBy,",
				"          UpdatedBy,",
				"          TSE_Start_Date = TSE_Start_DateN,",
				"          TSE_End_Date = TSE_End_DateN",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SLCTcols",
				"TSEKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKtse"
			]
		}
	}
}