{
	"name": "DF_Sales_Org_TL",
	"properties": {
		"folder": {
			"name": "End to End Workshop/Stg to Tgt"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSql_IN1684",
						"type": "DatasetReference"
					},
					"name": "SRCSalesOrgTL"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSql_IN1684",
						"type": "DatasetReference"
					},
					"name": "SNKSalesOrgTL"
				}
			],
			"transformations": [
				{
					"name": "TLKey"
				},
				{
					"name": "SelectOrder"
				},
				{
					"name": "NullHandling"
				},
				{
					"name": "DateTypeChange"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TLTerritoryName as string,",
				"          TLTerritoryCode as string,",
				"          TLTerritoryID as integer,",
				"          TL as string,",
				"          TLSFACode as string,",
				"          TLCode as integer,",
				"          TLEmail as string,",
				"          TLMobile as long,",
				"          MarketWorkingNorms as integer,",
				"          MinMarketWorkingwithTSE as integer,",
				"          Active_flag as string,",
				"          TLStartDate as string,",
				"          TLEndDate as string,",
				"          Cluster_code as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCSalesOrgTL",
				"NullHandling keyGenerate(output(TLKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> TLKey",
				"TLKey select(mapColumn(",
				"          TLTerritoryName,",
				"          TLTerritoryCode,",
				"          TLKey,",
				"          TLTerritoryID,",
				"          TL,",
				"          TLSFACode,",
				"          TLCode,",
				"          TLEmail,",
				"          TLMobile,",
				"          MarketWorkingNorms,",
				"          MinMarketWorkingwithTSE,",
				"          Active_flag,",
				"          TLStartDate,",
				"          TLEndDate,",
				"          Cluster_code,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOrder",
				"DateTypeChange derive(each(match(type == 'string'), $$ = iif(isNull($$) || $$ == 'NULL', 'UNK', $$)),",
				"          each(match(type == 'int'), $$ = iifNull($#, -1)),",
				"          each(match(type == 'timestamp'), $$ = iifNull($$, toTimestamp('2999-12-31 00:00:00', 'yyyy-MM-dd HH:mm:ss')))) ~> NullHandling",
				"SRCSalesOrgTL derive(TLStartDate = toDate(TLStartDate),",
				"          TLEndDate = toDate(TLEndDate)) ~> DateTypeChange",
				"SelectOrder sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          TLTerritoryName,",
				"          TLTerritoryCode,",
				"          TLKey,",
				"          TLTerritoryID,",
				"          TL,",
				"          TLSFACode,",
				"          TLCode,",
				"          TLEmail,",
				"          TLMobile,",
				"          MarketWorkingNorms,",
				"          MinMarketWorkingwithTSE,",
				"          Active_flag,",
				"          TLStartDate,",
				"          TLEndDate,",
				"          Cluster_code,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date}",
				"     )) ~> SNKSalesOrgTL"
			]
		}
	}
}