{
	"name": "DF_Alc_Outlet_Master_IN1680",
	"properties": {
		"folder": {
			"name": "stg - dw"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCstg"
				},
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SRCtgt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKupdateTgt"
				},
				{
					"dataset": {
						"referenceName": "DS_Azure_sql_IN1680",
						"type": "DatasetReference"
					},
					"name": "SNKinsert"
				}
			],
			"transformations": [
				{
					"name": "SelectTgt"
				},
				{
					"name": "LeftStgandTgt"
				},
				{
					"name": "Insert"
				},
				{
					"name": "SLCTupdate"
				},
				{
					"name": "SLCTinsert"
				},
				{
					"name": "NullHandling"
				},
				{
					"name": "AuditCols"
				},
				{
					"name": "updateEnddate"
				},
				{
					"name": "AlterUpdate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OUTLET_KEY as integer,",
				"          OUTLET_CODE as string,",
				"          OUTLET_NAME as string,",
				"          GEO_KEY as integer,",
				"          STREET as string,",
				"          CITY as string,",
				"          GEO_LONGITUDE as decimal(18,0),",
				"          GEO_LATITUDE as decimal(18,0),",
				"          OUTLET_STATUS as string,",
				"          OWNER_CODE as string,",
				"          OWNER_NAME as string,",
				"          DISTRUBUTOR_CODE as string,",
				"          MARKET_TYPE as string,",
				"          HUB as string,",
				"          CHANNEL as string,",
				"          MICRO_CHANNEL as string,",
				"          GROUP_OUTLET_CODE as string,",
				"          OUTLET_TIER as string,",
				"          IS_ACTIVE as string,",
				"          BUSINESS_UNIT as string,",
				"          SALES_REPRESENTATIVE_CODE as string,",
				"          SALES_TERRITORY as string,",
				"          CONTACT_NAME as string,",
				"          CONTACT_EMAIL as string,",
				"          LICENSE_TYPE as string,",
				"          ACTIVE_FLAG as integer,",
				"          DW_CREATED_DATE as timestamp,",
				"          DW_UPDATED_DATE as timestamp,",
				"          DW_CREATED_BY as string,",
				"          DW_UPDATED_BY as string,",
				"          TERRITORY_CODE as string,",
				"          OUTLET_SEGMENT as string,",
				"          OUTLET_START_DATE as timestamp,",
				"          OUTLET_END_DATE as timestamp,",
				"          CreatedAt as timestamp,",
				"          UpdatedAt as timestamp,",
				"          CreatedBy as string,",
				"          UpdatedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCstg",
				"source(output(",
				"          OUTLET_KEY as integer,",
				"          OUTLET_CODE as string,",
				"          OUTLET_NAME as string,",
				"          GEO_KEY as integer,",
				"          STREET as string,",
				"          CITY as string,",
				"          GEO_LONGITUDE as decimal(18,0),",
				"          GEO_LATITUDE as decimal(18,0),",
				"          OUTLET_STATUS as string,",
				"          OWNER_CODE as string,",
				"          OWNER_NAME as string,",
				"          DISTRUBUTOR_CODE as string,",
				"          MARKET_TYPE as string,",
				"          HUB as string,",
				"          CHANNEL as string,",
				"          MICRO_CHANNEL as string,",
				"          GROUP_OUTLET_CODE as string,",
				"          OUTLET_TIER as string,",
				"          BUSINESS_UNIT as string,",
				"          SALES_REPRESENTATIVE_CODE as string,",
				"          SALES_TERRITORY as string,",
				"          CONTACT_NAME as string,",
				"          CONTACT_EMAIL as string,",
				"          LICENSE_TYPE as string,",
				"          TERRITORY_CODE as string,",
				"          OUTLET_SEGMENT as string,",
				"          OUTLET_START_DATE as timestamp,",
				"          OUTLET_END_DATE as timestamp,",
				"          CreatedAt as timestamp,",
				"          UpdatedAt as timestamp,",
				"          CreatedBy as string,",
				"          UpdatedBy as string,",
				"          effective_start_date as timestamp,",
				"          effective_end_date as timestamp,",
				"          IsActive as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCtgt",
				"SRCtgt select(mapColumn(",
				"          each(match(true()),",
				"               'tgt_'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectTgt",
				"SRCstg, SelectTgt join(OUTLET_CODE == tgt_OUTLET_CODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftStgandTgt",
				"LeftStgandTgt split(!isNull(tgt_OUTLET_CODE) && tgt_IsActive=='Y'  && (OUTLET_STATUS!=tgt_OUTLET_STATUS ||tgt_OWNER_CODE!=OWNER_CODE ||OWNER_NAME!=tgt_OWNER_NAME ) ,",
				"     isNull(tgt_OUTLET_CODE) ||  !isNull(tgt_OUTLET_CODE) && tgt_IsActive=='Y' && (OUTLET_STATUS!=tgt_OUTLET_STATUS ||tgt_OWNER_CODE!=OWNER_CODE ||OWNER_NAME!=tgt_OWNER_NAME ),",
				"     disjoint: true) ~> Insert@(update, insert)",
				"NullHandling select(mapColumn(",
				"          OUTLET_CODE = tgt_OUTLET_CODE,",
				"          OUTLET_NAME = tgt_OUTLET_NAME,",
				"          GEO_KEY = tgt_GEO_KEY,",
				"          STREET = tgt_STREET,",
				"          CITY = tgt_CITY,",
				"          GEO_LONGITUDE = tgt_GEO_LONGITUDE,",
				"          GEO_LATITUDE = tgt_GEO_LATITUDE,",
				"          OUTLET_STATUS = tgt_OUTLET_STATUS,",
				"          OWNER_CODE = tgt_OWNER_CODE,",
				"          OWNER_NAME = tgt_OWNER_NAME,",
				"          DISTRUBUTOR_CODE = tgt_DISTRUBUTOR_CODE,",
				"          MARKET_TYPE = tgt_MARKET_TYPE,",
				"          HUB = tgt_HUB,",
				"          CHANNEL = tgt_CHANNEL,",
				"          MICRO_CHANNEL = tgt_MICRO_CHANNEL,",
				"          GROUP_OUTLET_CODE = tgt_GROUP_OUTLET_CODE,",
				"          OUTLET_TIER = tgt_OUTLET_TIER,",
				"          BUSINESS_UNIT = tgt_BUSINESS_UNIT,",
				"          SALES_REPRESENTATIVE_CODE = tgt_SALES_REPRESENTATIVE_CODE,",
				"          SALES_TERRITORY = tgt_SALES_TERRITORY,",
				"          CONTACT_NAME = tgt_CONTACT_NAME,",
				"          CONTACT_EMAIL = tgt_CONTACT_EMAIL,",
				"          LICENSE_TYPE = tgt_LICENSE_TYPE,",
				"          TERRITORY_CODE = tgt_TERRITORY_CODE,",
				"          OUTLET_SEGMENT = tgt_OUTLET_SEGMENT,",
				"          OUTLET_START_DATE = tgt_OUTLET_START_DATE,",
				"          OUTLET_END_DATE = tgt_OUTLET_END_DATE,",
				"          CreatedAt = tgt_CreatedAt,",
				"          UpdatedAt = tgt_UpdatedAt,",
				"          CreatedBy = tgt_CreatedBy,",
				"          UpdatedBy = tgt_UpdatedBy,",
				"          effective_start_date = tgt_effective_start_date,",
				"          effective_end_date = tgt_effective_end_date,",
				"          IsActive = tgt_IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SLCTupdate",
				"Insert@insert select(mapColumn(",
				"          OUTLET_CODE,",
				"          OUTLET_NAME,",
				"          GEO_KEY,",
				"          STREET,",
				"          CITY,",
				"          GEO_LONGITUDE,",
				"          GEO_LATITUDE,",
				"          OUTLET_STATUS,",
				"          OWNER_CODE,",
				"          OWNER_NAME,",
				"          DISTRUBUTOR_CODE,",
				"          MARKET_TYPE,",
				"          HUB,",
				"          CHANNEL,",
				"          MICRO_CHANNEL,",
				"          GROUP_OUTLET_CODE,",
				"          OUTLET_TIER,",
				"          BUSINESS_UNIT,",
				"          SALES_REPRESENTATIVE_CODE,",
				"          SALES_TERRITORY,",
				"          CONTACT_NAME,",
				"          CONTACT_EMAIL,",
				"          LICENSE_TYPE,",
				"          TERRITORY_CODE,",
				"          OUTLET_SEGMENT,",
				"          OUTLET_START_DATE,",
				"          OUTLET_END_DATE,",
				"          CreatedAt,",
				"          UpdatedAt,",
				"          CreatedBy,",
				"          UpdatedBy",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SLCTinsert",
				"Insert@update derive(each(match(type=='string'), $$ = iifNull($$, 'UNK')),",
				"          each(match(type=='integer'), $$ = iifNull($$, -1)),",
				"          each(match(type=='timestamp'), $$ = iifNull($$, toTimestamp('2999-12-31 00:00:00', 'yyyy-MM-dd HH:mm:ss')))) ~> NullHandling",
				"SLCTinsert derive(IsActive = 'Y',",
				"          effective_start_date = currentTimestamp()) ~> AuditCols",
				"SLCTupdate derive(effective_end_date = currentTimestamp(),",
				"          IsActive = 'N') ~> updateEnddate",
				"updateEnddate alterRow(updateIf(true())) ~> AlterUpdate",
				"AlterUpdate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['OUTLET_CODE','effective_start_date'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKupdateTgt",
				"AuditCols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKinsert"
			]
		}
	}
}