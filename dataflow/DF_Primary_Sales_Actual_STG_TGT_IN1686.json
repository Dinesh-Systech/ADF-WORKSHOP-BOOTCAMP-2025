{
	"name": "DF_Primary_Sales_Actual_STG_TGT_IN1686",
	"properties": {
		"folder": {
			"name": "Final_Project/STG_TGT"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SRCstg"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SRCcompany"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SRCcustomer"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SRCgeography"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SRCproduct"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SRCplant"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SNKtgt"
				}
			],
			"transformations": [
				{
					"name": "NULL"
				},
				{
					"name": "SELECTcompany"
				},
				{
					"name": "JOINfctcompany"
				},
				{
					"name": "SELECTcustomer"
				},
				{
					"name": "JOINfctcustomer"
				},
				{
					"name": "SELECTgeography"
				},
				{
					"name": "JOINfctgeography"
				},
				{
					"name": "SELECTproduct"
				},
				{
					"name": "JOINfctproduct"
				},
				{
					"name": "SELECTplant"
				},
				{
					"name": "JOINfctplant"
				},
				{
					"name": "surrogateKey"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CompanyCode as string,",
				"          SalesOrgCode as string,",
				"          DistributionChannel as integer,",
				"          Division as integer,",
				"          CustomerCode as string,",
				"          CustomerName as string,",
				"          CountryCode as string,",
				"          ZoneCode as string,",
				"          StateCode as string,",
				"          SKUCode as integer,",
				"          PlantCode as string,",
				"          TransactionDate as string,",
				"          VolumeActualCase as integer,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCstg",
				"source(output(",
				"          CompanyKey as integer,",
				"          CompanyCode as string,",
				"          CompanyName as string,",
				"          SalesOrgCode as string,",
				"          SalesOrgName as string,",
				"          ReportingHierarchyCode1 as string,",
				"          ReportingHierarchyName1 as string,",
				"          ReportingHierarchyCode2 as string,",
				"          ReportingHierarchyName2 as string,",
				"          ReportingHierarchyCode3 as string,",
				"          ReportingHierarchyName3 as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp,",
				"          Pipeline_RunID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCcompany",
				"source(output(",
				"          CustomerKey as integer,",
				"          CustomerCode as string,",
				"          CustomerName as string,",
				"          Address1 as string,",
				"          Address2 as string,",
				"          Address3 as string,",
				"          CountryCode as string,",
				"          CountryName as string,",
				"          ZoneCode as string,",
				"          ZoneName as string,",
				"          StateCode as string,",
				"          StateName as string,",
				"          SaleDistrict as string,",
				"          PostCode as integer,",
				"          IsActive as string,",
				"          RTM as string,",
				"          ProfitCentreCode as string,",
				"          ProfitCentreName as string,",
				"          CostCentreCode as string,",
				"          CostCentreName as string,",
				"          CreditDays as integer,",
				"          Division as integer,",
				"          {Market Type} as string,",
				"          CustomerLevel1 as string,",
				"          CustomerLevel2 as string,",
				"          CustomerLevel3 as string,",
				"          Ref_Cluster as string,",
				"          SalesGroupCode as string,",
				"          SalesGroup as string,",
				"          SaleOffice as string,",
				"          SaleOfficeCode as string,",
				"          LocalGroupCode as string,",
				"          LocalGroupName as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp,",
				"          Pipeline_RunID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCcustomer",
				"source(output(",
				"          GeographyKey as integer,",
				"          CountryCode as string,",
				"          CountryName as string,",
				"          ZoneCode as string,",
				"          ZoneName as string,",
				"          StateCode as string,",
				"          StateName as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp,",
				"          Pipeline_RunID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCgeography",
				"source(output(",
				"          ProductKey as integer,",
				"          SKUCode as integer,",
				"          ItemName as string,",
				"          CompanyCode as string,",
				"          IndustryName as string,",
				"          BrandFamily as string,",
				"          ReportingSegment as string,",
				"          BrandPackSize as string,",
				"          PackTypeCode as string,",
				"          BrandPackType as string,",
				"          {State Code} as string,",
				"          State as string,",
				"          BrandCode as string,",
				"          BrandName as string,",
				"          ProductCategory as string,",
				"          ProductSegment as string,",
				"          CaseConfig as integer,",
				"          Division as string,",
				"          ConversionFactor as integer,",
				"          AcquiredStartDate as timestamp,",
				"          AcquiredEndDate as timestamp,",
				"          DisposedStartDate as timestamp,",
				"          DisposedEndDate as timestamp,",
				"          InnovationFlag as string,",
				"          Flavour as string,",
				"          SubFlavour as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp,",
				"          Pipeline_RunID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCproduct",
				"source(output(",
				"          PlantKey as integer,",
				"          PlantCode as string,",
				"          PlantName as string,",
				"          CompanyCode as integer,",
				"          StateCode as string,",
				"          StateName as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp,",
				"          Pipeline_RunID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCplant",
				"select1 derive(each(match(type=='string'), $$ = iif(isNull($$) || $$ == 'NULL', 'UNK', $$)),",
				"          each(match(type=='integer'), $$ = iifNull($#, -1)),",
				"          each(match(type=='timestamp'), $$ = iifNull($$, toTimestamp('2999-12-31 00:00:00', 'yyyy-MM-dd HH:mm:ss')))) ~> NULL",
				"SRCcompany select(mapColumn(",
				"          CompanyKey,",
				"          t_CompanyCode = CompanyCode",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTcompany",
				"SRCstg, SELECTcompany join(CompanyCode == t_CompanyCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JOINfctcompany",
				"SRCcustomer select(mapColumn(",
				"          CustomerKey,",
				"          t_CustomerCode = CustomerCode,",
				"          CustomerName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTcustomer",
				"JOINfctcompany, SELECTcustomer join(CustomerCode == t_CustomerCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JOINfctcustomer",
				"SRCgeography select(mapColumn(",
				"          GeographyKey,",
				"          t_StateCode = StateCode",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTgeography",
				"JOINfctcustomer, SELECTgeography join(StateCode == t_StateCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JOINfctgeography",
				"SRCproduct select(mapColumn(",
				"          ProductKey,",
				"          t_SKUCode = SKUCode",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTproduct",
				"JOINfctgeography, SELECTproduct join(SKUCode == t_SKUCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JOINfctproduct",
				"SRCplant select(mapColumn(",
				"          PlantKey,",
				"          t_PlantCode = PlantCode",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTplant",
				"JOINfctproduct, SELECTplant join(PlantCode == t_PlantCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JOINfctplant",
				"NULL keyGenerate(output(SalesActualKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"JOINfctplant select(mapColumn(",
				"          CompanyCode,",
				"          SalesOrgCode,",
				"          DistributionChannel,",
				"          Division,",
				"          CustomerCode,",
				"          CustomerName = SRCstg@CustomerName,",
				"          CountryCode,",
				"          ZoneCode,",
				"          StateCode,",
				"          SKUCode,",
				"          PlantCode,",
				"          TransactionDate,",
				"          VolumeActualCase,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"surrogateKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PromotionCode as string,",
				"          PromotionDescription as string,",
				"          PromotionType as string,",
				"          RetailerCode as string,",
				"          EffectiveFrom as date,",
				"          EffectiveTo as date,",
				"          MappingLevel as string,",
				"          IsActive as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKtgt"
			]
		}
	}
}