{
	"name": "DF_Product_SCD1_IN1686",
	"properties": {
		"folder": {
			"name": "Final_Project/STG_TGT"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SRCstg"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "TGT"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_TGT_IN1686",
						"type": "DatasetReference"
					},
					"name": "SNKtgt"
				}
			],
			"transformations": [
				{
					"name": "SELECTtgt"
				},
				{
					"name": "LEFTsrctgt"
				},
				{
					"name": "Split"
				},
				{
					"name": "UNIONstreams"
				},
				{
					"name": "NULL"
				},
				{
					"name": "TRANSFORMATIONS"
				},
				{
					"name": "SKEY"
				},
				{
					"name": "SELECTcols"
				},
				{
					"name": "ALTERinsert"
				},
				{
					"name": "ALTERupdate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SKUCode as integer,",
				"          ItemName as string,",
				"          CompanyCode as string,",
				"          IndustryName as string,",
				"          BrandFamily as string,",
				"          ReportingSegment as string,",
				"          BrandPackSize as string,",
				"          PackTypeCode as string,",
				"          BrandPackType as string,",
				"          {State Code} as string,",
				"          State as string,",
				"          BrandCode as string,",
				"          BrandName as string,",
				"          ProductCategory as string,",
				"          ProductSegment as string,",
				"          CaseConfig as integer,",
				"          Division as string,",
				"          ConversionFactor as integer,",
				"          AcquiredStartDate as timestamp,",
				"          AcquiredEndDate as timestamp,",
				"          DisposedStartDate as timestamp,",
				"          DisposedEndDate as timestamp,",
				"          InnovationFlag as string,",
				"          Flavour as string,",
				"          SubFlavour as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp,",
				"          Pipeline_RunID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCstg",
				"source(output(",
				"          ProductKey as integer,",
				"          SKUCode as integer,",
				"          ItemName as string,",
				"          CompanyCode as string,",
				"          IndustryName as string,",
				"          BrandFamily as string,",
				"          ReportingSegment as string,",
				"          BrandPackSize as string,",
				"          PackTypeCode as string,",
				"          BrandPackType as string,",
				"          {State Code} as string,",
				"          State as string,",
				"          BrandCode as string,",
				"          BrandName as string,",
				"          ProductCategory as string,",
				"          ProductSegment as string,",
				"          CaseConfig as integer,",
				"          Division as string,",
				"          ConversionFactor as integer,",
				"          AcquiredStartDate as timestamp,",
				"          AcquiredEndDate as timestamp,",
				"          DisposedStartDate as timestamp,",
				"          DisposedEndDate as timestamp,",
				"          InnovationFlag as string,",
				"          Flavour as string,",
				"          SubFlavour as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp,",
				"          Pipeline_RunID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TGT",
				"TGT select(mapColumn(",
				"          t_SKUCode = SKUCode,",
				"          t_ItemName = ItemName,",
				"          t_ReportingSegment = ReportingSegment,",
				"          t_Flavour = Flavour",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SELECTtgt",
				"SRCstg, SELECTtgt join(SKUCode == t_SKUCode,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LEFTsrctgt",
				"LEFTsrctgt split(isNull(t_SKUCode),",
				"     (SKUCode == t_SKUCode) && (ReportingSegment != t_ReportingSegment),",
				"     disjoint: true) ~> Split@(InsertStream, UpdateStream)",
				"ALTERinsert, ALTERupdate union(byName: true)~> UNIONstreams",
				"TRANSFORMATIONS derive(each(match(type=='string'), $$ = iif(isNull($$)||lower($$)=='null','UNK',$$)),",
				"          each(match(type=='int'), $$ = iifNull($#, -1)),",
				"          each(match(type=='timestamp'), $$ = iifNull($$, toTimestamp('2999-12-31 00:00:00', 'yyyy-MM-dd HH:mm:ss')))) ~> NULL",
				"UNIONstreams derive(ItemName = Flavour) ~> TRANSFORMATIONS",
				"NULL keyGenerate(output(ProductKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> SKEY",
				"SKEY select(mapColumn(",
				"          SKUCode,",
				"          ItemName,",
				"          CompanyCode,",
				"          IndustryName,",
				"          BrandFamily,",
				"          ReportingSegment,",
				"          BrandPackSize,",
				"          PackTypeCode,",
				"          BrandPackType,",
				"          {State Code},",
				"          State,",
				"          BrandCode,",
				"          BrandName,",
				"          ProductCategory,",
				"          ProductSegment,",
				"          CaseConfig,",
				"          Division,",
				"          ConversionFactor,",
				"          AcquiredStartDate,",
				"          AcquiredEndDate,",
				"          DisposedStartDate,",
				"          DisposedEndDate,",
				"          InnovationFlag,",
				"          Flavour,",
				"          SubFlavour,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date},",
				"          Pipeline_RunID,",
				"          ProductKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SELECTcols",
				"Split@InsertStream alterRow(insertIf(true())) ~> ALTERinsert",
				"Split@UpdateStream alterRow(updateIf(true())) ~> ALTERupdate",
				"SELECTcols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PromotionCode as string,",
				"          PromotionDescription as string,",
				"          PromotionType as string,",
				"          RetailerCode as string,",
				"          EffectiveFrom as date,",
				"          EffectiveTo as date,",
				"          MappingLevel as string,",
				"          IsActive as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SNKtgt"
			]
		}
	}
}