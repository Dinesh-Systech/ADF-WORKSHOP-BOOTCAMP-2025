{
	"name": "DF_Sales_Org_TSE",
	"properties": {
		"folder": {
			"name": "End to End Workshop/Stg to Tgt"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSql_IN1684",
						"type": "DatasetReference"
					},
					"name": "SRCSalesOrgTSE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSql_IN1684",
						"type": "DatasetReference"
					},
					"name": "SNKSalesOrgCluster"
				}
			],
			"transformations": [
				{
					"name": "ClusterKey"
				},
				{
					"name": "SelectOrder"
				},
				{
					"name": "NullHandling"
				},
				{
					"name": "DateTypeChange"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TSETerritoryName as string,",
				"          TSETerritoryCode as string,",
				"          TSETerritoryID as integer,",
				"          TSE as string,",
				"          TSECode as integer,",
				"          TSESFACode as string,",
				"          TSEEmail as string,",
				"          TSEMobile as long,",
				"          TSECall_Norm as integer,",
				"          State as string,",
				"          State_Code as string,",
				"          DISTRICT as string,",
				"          DISTRICT_CODE as string,",
				"          ActiveFlag as string,",
				"          TSEStartDate as string,",
				"          TSEEndDate as string,",
				"          TL_Code as string,",
				"          {Created By} as string,",
				"          {Created Date} as timestamp,",
				"          {Updated By} as string,",
				"          {Updated Date} as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCSalesOrgTSE",
				"NullHandling keyGenerate(output(ClusterKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ClusterKey",
				"ClusterKey select(mapColumn(",
				"          ClusterName,",
				"          ClusterCode,",
				"          ClusterKey,",
				"          ClusterID,",
				"          ClusterHead,",
				"          ClusterSFACode,",
				"          ClusterHeadEmail,",
				"          ClusterHeadMobile,",
				"          Active_flag,",
				"          ClusterStartDate,",
				"          ClusterEndDate,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOrder",
				"DateTypeChange derive(each(match(type == 'string'), $$ = iif(isNull($$) || $$ == 'NULL', 'UNK', $$)),",
				"          each(match(type == 'int'), $$ = iifNull($#, -1)),",
				"          each(match(type == 'timestamp'), $$ = iifNull($$, toTimestamp('2999-12-31 00:00:00', 'yyyy-MM-dd HH:mm:ss')))) ~> NullHandling",
				"SRCSalesOrgTSE derive(ClusterStartDate = toDate(ClusterStartDate,\"dd-MM-yyyy\"),",
				"          ClusterEndDate = toDate(ClusterEndDate,\"dd-MM-yyyy\")) ~> DateTypeChange",
				"SelectOrder sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ClusterName,",
				"          ClusterCode,",
				"          ClusterKey,",
				"          ClusterID,",
				"          ClusterHead,",
				"          ClusterSFACode,",
				"          ClusterHeadEmail,",
				"          ClusterHeadMobile,",
				"          Active_flag,",
				"          ClusterStartDate,",
				"          ClusterEndDate,",
				"          {Created By},",
				"          {Created Date},",
				"          {Updated By},",
				"          {Updated Date}",
				"     )) ~> SNKSalesOrgCluster"
			]
		}
	}
}